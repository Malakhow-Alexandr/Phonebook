{"version":3,"file":"static/js/568.75a54355.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","utils/formatNumber.js","utils/contactsValidationSchema.js","components/ContactEditForm/ContactEditForm.styled.jsx","components/ContactEditForm/ContactEditForm.jsx","components/Confirm/Confirm.jsx","components/ContactsListItem/ContactListItem.styled.jsx","components/ContactsListItem/ContactsListItem.jsx","components/ContactsList/ContactLists.styled.jsx","components/ContactsList/ContactsList.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactFilter/Filter.styled.jsx","components/ContactFilter/Filter.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Container/Container.styled.jsx","pages/Contacts.js"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","export const formatNumber = phoneNumber => {\n  phoneNumber = phoneNumber.replace(/\\D/g, '');\n  const length = phoneNumber.length;\n  if (length === 5) {\n    return `${phoneNumber.substring(0, 3)}-${phoneNumber.substring(3)}`;\n  } else if (length === 6) {\n    return `${phoneNumber.substring(0, 2)}-${phoneNumber.substring(\n      2,\n      4\n    )}-${phoneNumber.substring(4)}`;\n  } else if (length === 7) {\n    return `${phoneNumber.substring(0, 3)}-${phoneNumber.substring(\n      3,\n      5\n    )}-${phoneNumber.substring(5)}`;\n  } else if (length === 8) {\n    return `${phoneNumber.substring(0, 2)}-${phoneNumber.substring(\n      2,\n      4\n    )}-${phoneNumber.substring(4, 6)}-${phoneNumber.substring(6)}`;\n  } else if (length === 9) {\n    return `${phoneNumber.substring(0, 3)}-${phoneNumber.substring(\n      3,\n      6\n    )}-${phoneNumber.substring(6)}`;\n  } else if (length === 10) {\n    return `${phoneNumber.substring(0, 3)}-${phoneNumber.substring(\n      3,\n      6\n    )}-${phoneNumber.substring(6, 8)}-${phoneNumber.substring(8)}`;\n  } else if (length === 11) {\n    return `${phoneNumber.substring(0, 3)}-${phoneNumber.substring(\n      3,\n      6\n    )}-${phoneNumber.substring(6, 9)}-${phoneNumber.substring(9)}`;\n  } else if (length === 12) {\n    return `${phoneNumber.substring(0, 2)}-${phoneNumber.substring(\n      2,\n      5\n    )}-${phoneNumber.substring(5, 8)}-${phoneNumber.substring(\n      8,\n      10\n    )}-${phoneNumber.substring(10)}`;\n  } else {\n    return phoneNumber;\n  }\n};\n","import * as yup from 'yup';\n\nexport const validationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .trim()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      `Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan`\n    )\n    .required(),\n  number: yup\n    .string()\n    .trim()\n    .test(\n      'maxDigits',\n      'Phone number must not have more than 12 digits',\n      value => {\n        if (!value) return true;\n        const numDigits = value.replace(/\\D/g, '').length;\n        return numDigits <= 12;\n      }\n    )\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{0,}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required(),\n});\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const LabelEdit = styled.label`\n  font-family: 'Alkatra', sans-serif;\n  position: relative;\n  &:not(:last-child) {\n    margin-bottom: 15px;\n  }\n`;\n\nexport const StyledEditForm = styled(Form)`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const StyledErrorEditMessage = styled.p`\n  position: absolute;\n  font-family: 'Alkatra', sans-serif;\n  width: 150px;\n  top: -210px;\n  left: 160px;\n  font-size: 14px;\n  color: #ff0015;\n`;\n\nexport const StyledEditField = styled(Field)`\n  width: 150px;\n  height: 30px;\n  padding: 2px 5px;\n  margin: 3px 0;\n  box-sizing: border-box;\n  border: 2px solid #ccc;\n  border-radius: 4px;\n  background-color: #f8f8f8;\n  font-size: 16px;\n  font-weight: 400;\n  color: #444;\n  transition: border-color 0.3s ease-in-out, box-shadow 0.3s ease-in-out;\n\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);\n  transition: box-shadow 0.3s ease-in-out;\n  &:focus {\n    outline: none;\n    border-color: #f08307;\n    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.2);\n  }\n`;\nexport const ButtonEdit = styled.button`\n  width: 65px;\n  height: 40px;\n  font-size: 13px;\n  color: #fff;\n  border-radius: 5px;\n  font-family: 'Alkatra', sans-serif;\n  font-weight: 400;\n  background: transparent;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  position: relative;\n  display: inline-block;\n  box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),\n    7px 7px 20px 0px rgba(0, 0, 0, 0.1), 4px 4px 5px 0px rgba(0, 0, 0, 0.1);\n  outline: none;\n  background: #f08307;\n  border: none;\n  z-index: 1;\n\n  &:after {\n    position: absolute;\n    content: '';\n    width: 0;\n    height: 100%;\n    top: 0;\n    right: 0;\n    z-index: -1;\n    background-color: #b46306;\n    border-radius: 5px;\n    box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),\n      7px 7px 20px 0px rgba(0, 0, 0, 0.1), 4px 4px 5px 0px rgba(0, 0, 0, 0.1);\n    transition: all 0.3s ease;\n  }\n\n  &:hover {\n    color: black;\n  }\n  &:hover:after {\n    left: 0;\n    width: 100%;\n  }\n  &:active {\n    top: 2px;\n  }\n  &:disabled {\n    background-color: grey;\n  }\n  &:disabled:hover:after {\n    display: none;\n  }\n  &:disabled:active {\n    top: 0;\n  }\n`;\n","import { ErrorMessage, Formik } from 'formik';\nimport { validationSchema } from 'utils/contactsValidationSchema';\nimport { useDispatch } from 'react-redux';\nimport { updateContact } from 'redux/contacts/operation';\nimport {\n  LabelEdit,\n  StyledErrorEditMessage,\n  StyledEditField,\n  StyledEditForm,\n  ButtonEdit,\n} from './ContactEditForm.styled';\n\nexport const ContactEditForm = ({ id, initialValues, onSubmit }) => {\n  const dispatch = useDispatch();\n  const handleSubmit = (values, { resetForm }) => {\n    const contact = {\n      id,\n      name: values.name,\n      number: values.number,\n    };\n    dispatch(updateContact(contact));\n    resetForm();\n    onSubmit();\n  };\n  return (\n    <Formik\n      validationSchema={validationSchema}\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n    >\n      <StyledEditForm>\n        <LabelEdit>\n          <StyledEditField type=\"text\" name=\"name\" />\n          <ErrorMessage component={StyledErrorEditMessage} name=\"name\" />\n        </LabelEdit>\n\n        <LabelEdit>\n          <StyledEditField type=\"tell\" name=\"number\" />\n          <ErrorMessage component={StyledErrorEditMessage} name=\"number\" />\n        </LabelEdit>\n\n        <ButtonEdit type=\"submit\">Update</ButtonEdit>\n        <ButtonEdit\n          type=\"button\"\n          onClick={() => {\n            onSubmit();\n          }}\n        >\n          Cancel\n        </ButtonEdit>\n      </StyledEditForm>\n    </Formik>\n  );\n};\n","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Slide from '@mui/material/Slide';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport const Confirm = ({\n  title,\n  text,\n  btnAgree,\n  btnDisagree,\n  handleBtnAgree,\n  open,\n  setOpen,\n}) => {\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={handleClose}\n      aria-describedby=\"alert-dialog-slide-description\"\n    >\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-slide-description\">\n          {text}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            handleBtnAgree();\n            handleClose();\n          }}\n        >\n          {btnAgree}\n        </Button>\n        <Button variant=\"outlined\" onClick={handleClose}>\n          {btnDisagree}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ListItemStyled = styled.li`\n  display: flex;\n  flex-direction: row-reverse;\n\n  gap: 20px;\n  align-items: center;\n  margin-bottom: 10px;\n`;\nexport const ContactDesc = styled.p`\n  margin: 0;\n  font-size: 17px;\n  font-family: 'Alkatra', sans-serif;\n  font-weight: 400;\n  color: #fff;\n  transition: color 250ms ease-in-out;\n`;\n\nexport const ButtonDeleteListItem = styled.button`\n  display: block;\n  margin-left: auto;\n  border: none;\n  border-radius: 5px;\n  width: 90px;\n  height: 40px;\n  color: #fff;\n  padding: 0;\n  line-height: 42px;\n  font-family: 'Alkatra', sans-serif;\n  font-size: 16px;\n  font-weight: 400;\n  background: #f08307;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  position: relative;\n  display: inline-block;\n  outline: none;\n\n  &:hover {\n    color: #c41431;\n    background: transparent;\n    box-shadow: none;\n  }\n\n  &:before,\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 0;\n    height: 2px;\n    width: 0;\n    height: 2px;\n    background: #b60816;\n    box-shadow: -1px -1px 5px 0px #b60816, 7px 7px 20px 0px #0003,\n      4px 4px 5px 0px #0002;\n    transition: 400ms ease all;\n  }\n\n  &:after {\n    right: inherit;\n    top: inherit;\n    left: 0;\n    bottom: 0;\n  }\n  &:hover:before,\n  &:hover:after {\n    width: 100%;\n    transition: 800ms ease all;\n  }\n  &:hover ~ p {\n    color: red;\n  }\n  &:disabled {\n    background: #aea8b3;\n    background: linear-gradient(0deg, #958a97 0%, #a89da8 100%);\n    &:before,\n    &:after {\n      height: 0;\n      background: grey;\n      box-shadow: none;\n      transition: 0ms ease all;\n    }\n  }\n`;\n\nexport const ButtonEditListItem = styled.button`\n  display: block;\n  border: none;\n  border-radius: 5px;\n  width: 90px;\n  height: 40px;\n  color: #fff;\n  padding: 0;\n  line-height: 42px;\n  font-family: 'Alkatra', sans-serif;\n  font-size: 16px;\n  font-weight: 400;\n  background: #f08307;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  position: relative;\n  display: inline-block;\n  outline: none;\n\n  &:hover {\n    color: #29c414;\n    background: transparent;\n    box-shadow: none;\n  }\n\n  &:before,\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 0;\n    height: 2px;\n    width: 0;\n    height: 2px;\n    background: #36922a;\n    box-shadow: -1px -1px 5px 0px #36922a, 7px 7px 20px 0px #0003,\n      4px 4px 5px 0px #0002;\n    transition: 400ms ease all;\n  }\n\n  &:after {\n    right: inherit;\n    top: inherit;\n    left: 0;\n    bottom: 0;\n  }\n  &:hover:before,\n  &:hover:after {\n    width: 100%;\n    transition: 800ms ease all;\n  }\n  &:hover ~ p {\n    color: #36922a;\n  }\n  &:disabled {\n    background: #aea8b3;\n    background: linear-gradient(0deg, #958a97 0%, #a89da8 100%);\n    &:before,\n    &:after {\n      height: 0;\n      background: grey;\n      box-shadow: none;\n      transition: 0ms ease all;\n    }\n  }\n`;\n","import { Dna } from 'react-loader-spinner';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operation';\nimport { selectIsLoading, selectError } from 'redux/contacts/selectors';\nimport { useState } from 'react';\nimport { formatNumber } from 'utils/formatNumber';\nimport { formatName } from 'utils/formatName';\nimport { ContactEditForm } from 'components/ContactEditForm/ContactEditForm';\nimport { Confirm } from 'components/Confirm/Confirm';\nimport PropTypes from 'prop-types';\nimport {\n  ListItemStyled,\n  ButtonDeleteListItem,\n  ContactDesc,\n  ButtonEditListItem,\n} from './ContactListItem.styled';\nimport { toast } from 'react-toastify';\n\nexport const ContactListItem = ({ id, name, number }) => {\n  const [isEdit, setIsEdit] = useState(false);\n  const [openConfirm, setOpenConfirm] = useState(false);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <ListItemStyled>\n        {isEdit ? (\n          <ContactEditForm\n            id={id}\n            initialValues={{ name, number }}\n            onSubmit={() => setIsEdit(false)}\n          />\n        ) : (\n          <>\n            {!isEdit && (\n              <ButtonEditListItem\n                onClick={() => {\n                  setIsEdit(true);\n                }}\n              >\n                Edit\n              </ButtonEditListItem>\n            )}\n            <ButtonDeleteListItem\n              disabled={isLoading}\n              onClick={() => {\n                setOpenConfirm(true);\n              }}\n            >\n              <span>\n                {isLoading ? <Dna height=\"40\" width=\"30\" /> : 'Delete'}\n              </span>\n            </ButtonDeleteListItem>\n            <ContactDesc>{formatNumber(number)}</ContactDesc>\n            <ContactDesc>{formatName(name)} :</ContactDesc>\n          </>\n        )}\n      </ListItemStyled>\n\n      <Confirm\n        title=\"Are you sure?\"\n        text=\"Are you sure you want to delete this contact?\"\n        btnAgree=\"Yes\"\n        btnDisagree=\"No\"\n        handleBtnAgree={() => {\n          dispatch(deleteContact(id));\n          if (!isLoading && !error) {\n            toast.success(`${formatName(name)} deleted from contacts `);\n          }\n        }}\n        open={openConfirm}\n        setOpen={setOpenConfirm}\n      />\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ListStyled = styled.ul`\n  position: relative;\n  list-style: none;\n  margin: auto;\n  width: 500px;\n  padding: 10px;\n`;\n\nexport const ListButton = styled.button`\n  width: 130px;\n  height: 40px;\n  color: #fff;\n  border-radius: 5px;\n  padding: 10px 25px;\n  font-family: 'Lato', sans-serif;\n  font-weight: 500;\n  background: transparent;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  position: relative;\n  display: inline-block;\n  box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),\n    7px 7px 20px 0px rgba(0, 0, 0, 0.1), 4px 4px 5px 0px rgba(0, 0, 0, 0.1);\n  outline: none;\n`;\n","import { ContactListItem } from 'components/ContactsListItem/ContactsListItem';\nimport { ListStyled } from './ContactLists.styled';\nimport { selectFilter, selectContacts } from 'redux/contacts/selectors';\nimport { useSelector } from 'react-redux';\n\nexport const ContactsList = () => {\n  const filter = useSelector(selectFilter);\n  const contacts = useSelector(selectContacts);\n\n  const normalizedFilter = filter.toLowerCase();\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return (\n    <ListStyled>\n      {filteredContacts?.map(({ id, name, number }) => (\n        <ContactListItem key={id} id={id} name={name} number={number} />\n      ))}\n    </ListStyled>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  justify-content: left;\n  gap: 10px;\n  padding: 10px;\n  margin-right: auto;\n`;\n\nexport const Label = styled.label`\n  font-family: 'Rubik', sans-serif;\n  position: relative;\n  &:not(:last-child) {\n    margin-bottom: 15px;\n  }\n`;\n\nexport const StyledErrorMessage = styled.p`\n  position: absolute;\n  font-family: 'Rubik', sans-serif;\n  top: 6px;\n  left: 250px;\n  font-size: 14px;\n  color: #ff0015;\n`;\n\nexport const StyledField = styled(Field)`\n  width: 230px;\n  height: 30px;\n  padding: 2px 5px;\n  margin: 3px 0;\n  box-sizing: border-box;\n  border: 2px solid #ccc;\n  border-radius: 4px;\n  background-color: #f8f8f8;\n  font-size: 16px;\n  font-weight: 400;\n  color: #444;\n  transition: border-color 0.3s ease-in-out, box-shadow 0.3s ease-in-out;\n\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);\n  transition: box-shadow 0.3s ease-in-out;\n  &:focus {\n    outline: none;\n    border-color: #f08307;\n    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.2);\n  }\n  &:focus ~ span {\n    color: #f08307;\n  }\n`;\n\nexport const StyledLabel = styled.span`\n  position: absolute;\n  top: -18px;\n  left: 0;\n  font-family: 'Alkatra', sans-serif;\n  transition: color 600ms ease-in-out;\n`;\n\nexport const Button = styled.button`\n  width: 130px;\n  height: 40px;\n  color: #fff;\n  border-radius: 5px;\n  font-family: 'Alkatra', sans-serif;\n  font-weight: 400;\n  background: transparent;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  position: relative;\n  display: inline-block;\n  box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),\n    7px 7px 20px 0px rgba(0, 0, 0, 0.1), 4px 4px 5px 0px rgba(0, 0, 0, 0.1);\n  outline: none;\n  background: #f08307;\n  border: none;\n  z-index: 1;\n\n  &:after {\n    position: absolute;\n    content: '';\n    width: 0;\n    height: 100%;\n    top: 0;\n    right: 0;\n    z-index: -1;\n    background-color: #b46306;\n    border-radius: 5px;\n    box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),\n      7px 7px 20px 0px rgba(0, 0, 0, 0.1), 4px 4px 5px 0px rgba(0, 0, 0, 0.1);\n    transition: all 0.3s ease;\n  }\n\n  &:hover {\n    color: #fff;\n  }\n  &:hover:after {\n    left: 0;\n    width: 100%;\n  }\n  &:active {\n    top: 2px;\n  }\n  &:disabled {\n    background-color: grey;\n  }\n  &:disabled:hover:after {\n    display: none;\n  }\n  &:disabled:active {\n    top: 0;\n  }\n`;\n","import { ErrorMessage, Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContacts } from 'redux/contacts/operation';\nimport {\n  StyledForm,\n  Label,\n  StyledErrorMessage,\n  StyledField,\n  Button,\n  StyledLabel,\n} from './ContactForm.styled';\nimport { toast } from 'react-toastify';\nimport { validationSchema } from 'utils/contactsValidationSchema';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  const initialValues = { name: '', number: '' };\n\n  const handleSubmit = (values, { resetForm }) => {\n    const contact = {\n      name: values.name,\n      number: values.number,\n    };\n\n    if (\n      contacts\n        .map(contact => contact.name.toLowerCase())\n        .includes(values.name.toLowerCase())\n    ) {\n      return toast.warn(`${values.name} is alredy in contacts.`);\n    }\n\n    dispatch(addContacts(contact));\n\n    resetForm();\n  };\n\n  return (\n    <Formik\n      validationSchema={validationSchema}\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n    >\n      <StyledForm>\n        <Label>\n          <StyledField type=\"text\" name=\"name\" />\n          <StyledLabel>Name</StyledLabel>\n          <ErrorMessage component={StyledErrorMessage} name=\"name\" />\n        </Label>\n\n        <Label>\n          <StyledField type=\"tell\" name=\"number\" />\n          <StyledLabel>Number</StyledLabel>\n          <ErrorMessage component={StyledErrorMessage} name=\"number\" />\n        </Label>\n\n        <Button type=\"submit\">Add Contact</Button>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FilterStyledLabel = styled.label`\n  font-family: 'Rubik', sans-serif;\n  position: relative;\n`;\n\nexport const FilterStyledInput = styled.input`\n  width: 230px;\n  height: 30px;\n  padding: 2px 5px;\n  margin: 0px 0px 20px 170px;\n  box-sizing: border-box;\n  border: 2px solid #ccc;\n  border-radius: 4px;\n  background-color: #f8f8f8;\n  font-size: 16px;\n  font-weight: 400;\n  color: #444;\n  transition: border-color 0.3s ease-in-out, box-shadow 0.3s ease-in-out;\n\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);\n  transition: box-shadow 0.3s ease-in-out;\n  &:focus {\n    outline: none;\n    border-color: #f08307;\n    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.2);\n  }\n  &:focus ~ span {\n    color: #f08307;\n  }\n`;\nexport const FilterLabel = styled.span`\n  position: absolute;\n  top: 0px;\n  left: 20px;\n  font-family: 'Alkatra', sans-serif;\n  font-size: 22px;\n  font-weight: 400;\n  transition: color 600ms ease-in-out;\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nimport {\n  FilterStyledLabel,\n  FilterStyledInput,\n  FilterLabel,\n} from './Filter.styled';\n\nexport const ContactFilter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = filter => {\n    dispatch(setFilter(filter));\n  };\n\n  return (\n    <FilterStyledLabel>\n      <FilterStyledInput\n        type=\"text\"\n        onChange={event => {\n          handleFilterChange(event.target.value);\n        }}\n      />\n      <FilterLabel>Filter by name</FilterLabel>\n    </FilterStyledLabel>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const SectionStyled = styled.section`\n  width: 100%;\n  padding: 10px;\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\nexport const Title = styled.h2`\n  text-align: center;\n  font-family: 'Alkatra', sans-serif;\n  font-weight: 700;\n\n  color: #f08307;\n  margin: 0;\n  margin-bottom: 20px;\n  font-size: 30px;\n`;\n","import { SectionStyled, Title } from './Section.styled';\nimport PropTypes from 'prop-types';\n\nexport const Section = ({ title, children }) => (\n  <SectionStyled>\n    {title && <Title>{title}</Title>}\n    {children}\n  </SectionStyled>\n);\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  position: relative;\n  padding: 20px;\n  border-radius: 5px;\n  width: 600px;\n  margin: auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background: #31302f;\n  align-items: center;\n  font-size: 15;\n  color: #fff;\n  box-shadow: rgb(0 0 0 / 50%) 0px 2px 7px;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactFilter } from 'components/ContactFilter/Filter';\nimport { Section } from 'components/Section/Section';\nimport { Container } from 'components/Container/Container.styled';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { toast } from 'react-toastify';\nimport { fetchContacts } from 'redux/contacts/operation';\nimport { selectIsLoading, selectError } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  if (error) {\n    toast.error(`Sorry we have a ${error}, please reload page!`);\n  }\n\n  return (\n    <Container>\n      <Section title={'Phonebook'}>\n        <ContactForm />\n      </Section>\n      <Section title={'Contacts'}>\n        <ContactFilter />\n        <ContactsList />\n      </Section>\n      <ThreeDots\n        height=\"50\"\n        width=\"50\"\n        color=\"#e9eee8\"\n        ariaLabel=\"three-circles-rotating\"\n        visible={isLoading}\n        wrapperStyle={{ position: 'absolute', top: 215, left: 175 }}\n        colors={['red', 'green', 'blue', 'yellow', 'orange', 'purple']}\n      />\n    </Container>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","formatNumber","phoneNumber","length","replace","substring","validationSchema","yup","shape","name","trim","matches","required","number","test","value","LabelEdit","styled","StyledEditForm","Form","StyledErrorEditMessage","StyledEditField","Field","ButtonEdit","ContactEditForm","id","initialValues","onSubmit","dispatch","useDispatch","values","resetForm","contact","updateContact","type","component","onClick","Transition","React","props","ref","Slide","direction","Confirm","title","text","btnAgree","btnDisagree","handleBtnAgree","open","setOpen","handleClose","Dialog","TransitionComponent","keepMounted","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","variant","ListItemStyled","ContactDesc","ButtonDeleteListItem","ButtonEditListItem","ContactListItem","useState","isEdit","setIsEdit","openConfirm","setOpenConfirm","useSelector","disabled","height","width","formatName","deleteContact","toast","ListStyled","ContactsList","normalizedFilter","toLowerCase","filteredContacts","includes","map","StyledForm","Label","StyledErrorMessage","StyledField","StyledLabel","ContactForm","addContacts","FilterStyledLabel","FilterStyledInput","FilterLabel","ContactFilter","onChange","event","target","setFilter","SectionStyled","Title","Section","children","Container","Contacts","useEffect","fetchContacts","color","ariaLabel","visible","wrapperStyle","position","top","left","colors"],"sourceRoot":""}