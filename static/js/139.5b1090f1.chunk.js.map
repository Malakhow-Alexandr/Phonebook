{"version":3,"file":"static/js/139.5b1090f1.chunk.js","mappings":"sLAEaA,E,QAAmBC,EAAAA,GAAH,sJ,qRCIhBC,EAAqBD,EAAAA,EAAAA,KAAH,gPAalBE,EAAeF,EAAAA,EAAAA,MAAH,+CAGZG,GAAkBH,EAAAA,EAAAA,GAAOI,EAAAA,EAAPJ,CAAH,mDAIfK,GAAiBL,EAAAA,EAAAA,GAAOM,EAAAA,IAAPN,CAAH,uGAOdO,GAAeP,EAAAA,EAAAA,GAAOQ,EAAAA,IAAPR,CAAH,uGAOZS,GAAmBT,EAAAA,EAAAA,GAAOU,EAAAA,IAAPV,CAAH,uGAOhBW,GAAeX,EAAAA,EAAAA,GAAOY,EAAAA,EAAPZ,CAAH,qB,mIClCZa,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KA2BA,OACE,UAAC,KAAD,CAAoBC,SA1BD,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfX,GACEY,EAAAA,EAAAA,IAAS,CACPC,KAAMH,EAAKI,SAASD,KAAKE,MACzBC,MAAON,EAAKI,SAASE,MAAMD,MAC3BZ,SAAUO,EAAKI,SAASX,SAASY,SAGrCL,EAAKO,OACN,EAe6CC,aAAa,MAAzD,WACE,UAAC,KAAD,YACE,SAAC,KAAD,KACA,SAAC,KAAD,CACEC,UAAQ,EACRC,KAAK,OACLP,KAAK,OACLQ,GAAG,iBACHC,MAAM,OACNC,QAAQ,WACRC,KAAK,cAIT,UAAC,KAAD,YACE,SAAC,KAAD,KACA,SAAC,KAAD,CACEL,UAAQ,EACRC,KAAK,QACLP,KAAK,QACLQ,GAAG,iBACHC,MAAM,QACNC,QAAQ,WACRC,KAAK,cAIT,UAAC,KAAD,YACE,SAAC,KAAD,KACA,SAAC,KAAD,CACEL,UAAQ,EACRC,KAAK,WACLP,KAAK,WACLQ,GAAG,iBACHC,MAAM,WACNC,QAAQ,WACRC,KAAK,QACLT,MAAOZ,EACPsB,SAnDqB,SAAAC,GAC3B,IAAMX,EAAQW,EAAMC,OAAOZ,MAC3BX,EAAYW,GAEU,yCACHa,KAAKb,GAGtBT,GAAS,GAFTA,GAAS,EAIZ,EA0COD,MAAOA,EACPwB,WACExB,GACA,mFAEFyB,WAAY,CAAEC,UAAW,SAI7B,SAAC,KAAD,CAAcR,QAAQ,YAAYH,KAAK,SAAvC,wBAKL,E,UC9Fc,SAASY,IACtB,OACE,4BACE,SAAC,IAAD,sCAEA,SAACjC,EAAD,MAGL,C","sources":["components/PagesTitle/PagesTitle.styled.jsx","components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.js","pages/Register.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const PagesTitleStyled = styled.h2`\n  margin-bottom: 20px;\n  text-align: center;\n  font-family: 'Alkatra', sans-serif;\n  font-size: 30px;\n  font-weight: 700;\n`;\n","import styled from '@emotion/styled';\nimport { TextField } from '@mui/material';\nimport { GoPerson, GoMail } from 'react-icons/go';\nimport { RiLockPasswordLine } from 'react-icons/ri';\nimport { Button } from '@mui/material';\n\nexport const RegisterFormStyled = styled.form`\n  padding: 30px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 350px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  border: 1px solid #d4d4d4;\n  border-radius: 4px;\n`;\n\nexport const InputWrapper = styled.label`\n  position: relative;\n`;\nexport const TextFieldStyled = styled(TextField)`\n  background-color: #fff;\n`;\n\nexport const GoPersonStyled = styled(GoPerson)`\n  position: absolute;\n  top: 12px;\n  left: -25px;\n  transform: scale(1.1);\n`;\n\nexport const GoMailStyled = styled(GoMail)`\n  position: absolute;\n  top: 12px;\n  left: -25px;\n  transform: scale(1.1);\n`;\n\nexport const GoPasswordStyled = styled(RiLockPasswordLine)`\n  position: absolute;\n  top: 12px;\n  left: -25px;\n  transform: scale(1.1);\n`;\n\nexport const ButtonStyled = styled(Button)``;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport {\n  RegisterFormStyled,\n  TextFieldStyled,\n  GoPersonStyled,\n  GoMailStyled,\n  InputWrapper,\n  GoPasswordStyled,\n  ButtonStyled,\n} from './RegisterForm.styled';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(false);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  const handlePasswordChange = event => {\n    const value = event.target.value;\n    setPassword(value);\n\n    const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{7,}$/;\n    if (!passwordRegex.test(value)) {\n      setError(true);\n    } else {\n      setError(false);\n    }\n  };\n\n  return (\n    <RegisterFormStyled onSubmit={handleSubmit} autoComplete=\"off\">\n      <InputWrapper>\n        <GoPersonStyled />\n        <TextFieldStyled\n          required\n          type=\"text\"\n          name=\"name\"\n          id=\"outlined-basic\"\n          label=\"Name\"\n          variant=\"outlined\"\n          size=\"small\"\n        />\n      </InputWrapper>\n\n      <InputWrapper>\n        <GoMailStyled />\n        <TextFieldStyled\n          required\n          type=\"email\"\n          name=\"email\"\n          id=\"outlined-basic\"\n          label=\"Email\"\n          variant=\"outlined\"\n          size=\"small\"\n        />\n      </InputWrapper>\n\n      <InputWrapper>\n        <GoPasswordStyled />\n        <TextFieldStyled\n          required\n          type=\"password\"\n          name=\"password\"\n          id=\"outlined-basic\"\n          label=\"Password\"\n          variant=\"outlined\"\n          size=\"small\"\n          value={password}\n          onChange={handlePasswordChange}\n          error={error}\n          helperText={\n            error &&\n            'The password must contain at least 7 characters and include numbers and letters!'\n          }\n          inputProps={{ minLength: 7 }}\n        />\n      </InputWrapper>\n\n      <ButtonStyled variant=\"contained\" type=\"submit\">\n        Register\n      </ButtonStyled>\n    </RegisterFormStyled>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { PagesTitleStyled } from 'components/PagesTitle/PagesTitle.styled';\n\nexport default function Register() {\n  return (\n    <div>\n      <PagesTitleStyled>Phonebook Registration</PagesTitleStyled>\n\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["PagesTitleStyled","styled","RegisterFormStyled","InputWrapper","TextFieldStyled","TextField","GoPersonStyled","GoPerson","GoMailStyled","GoMail","GoPasswordStyled","RiLockPasswordLine","ButtonStyled","Button","RegisterForm","dispatch","useDispatch","useState","password","setPassword","error","setError","onSubmit","e","preventDefault","form","currentTarget","register","name","elements","value","email","reset","autoComplete","required","type","id","label","variant","size","onChange","event","target","test","helperText","inputProps","minLength","Register"],"sourceRoot":""}